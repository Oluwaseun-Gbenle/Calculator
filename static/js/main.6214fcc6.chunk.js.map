{"version":3,"sources":["components/calculator.jsx","serviceWorker.js","index.js"],"names":["Results","props","id","className","this","up","replace","down","React","Component","Keypads","onClick","bind","e","target","dataset","value","data-value","style","backgroundColor","App","state","handleClick","maxLength","timer","setTimeout","setState","clearTimeout","btnClick","slice","eval","search","length","max","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6214fcc6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './calculator.css'\r\n\r\nclass Results extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n     \r\n    }\r\n    render () {\r\n     return ( \r\n    <div id=\"display\">\r\n         <div className=\"display-up\">{this.props.up.replace(/[/]/g,'รท').replace(/\\*/g,\r\n  'x')}</div> \r\n         <div className=\"display-down\">{this.props.down.replace(/[/]/g,'รท').replace(/\\*/g,'x')}</div>\r\n       </div>\r\n  );\r\n  }\r\n  }\r\n  class Keypads extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n     \r\n      this.onClick = this.onClick.bind(this);\r\n    }\r\n    onClick (e) {\r\n      this.props.onClick(e.target.dataset.value)\r\n      \r\n    }\r\n    render () {\r\n      return(\r\n        <div className=\"btn\">  \r\n  <button id=\"open-bracket\" data-value=\"(\" onClick={this.onClick}>(</button>\r\n  <button id=\"backspace\" data-value=\"CE\" onClick={this.onClick}>CE</button>\r\n   <button id=\"close-bracket\"data-value=\")\" onClick={this.onClick}>)</button>\r\n   <button style={{backgroundColor:'#ac3939'}}  id=\"clear\" data-value=\"C\" onClick={this.onClick}>C</button><br/>\r\n          \r\n  <button id=\"seven\" data-value=\"7\" onClick={this.onClick}>7</button>\r\n   <button id=\"eight\" data-value=\"8\" onClick={this.onClick}>8</button>\r\n   <button id=\"nine\" data-value=\"9\" onClick={this.onClick}>9</button>\r\n    <button id=\"multiply\" data-value=\"*\" onClick={this.onClick}>x</button><br/>\r\n          \r\n   <button id=\"four\" data-value=\"4\" onClick={this.onClick}>4</button>\r\n  <button id=\"five\" data-value=\"5\" onClick={this.onClick}>5</button>\r\n    <button id=\"six\" data-value=\"6\" onClick={this.onClick}>6</button>\r\n   <button id=\"subtract\" data-value=\"-\" onClick=\r\n     {this.onClick}>-</button><br/>\r\n          \r\n    <button id=\"one\" data-value=\"1\" onClick={this.onClick}>1</button>\r\n   <button id=\"two\" data-value=\"2\" onClick={this.onClick}>2</button>\r\n   <button id=\"three\" data-value=\"3\" onClick={this.onClick}>3</button>\r\n   <button id=\"add\" data-value=\"+\" onClick={this.onClick}>+</button><br/>\r\n          \r\n     <button id=\"divide\" data-value=\"/\" onClick={this.onClick}>รท</button> \r\n   <button id=\"zero\" data-value=\"0\" onClick={this.onClick}>0</button>     \r\n  <button id=\"decimal\" data-value=\".\" onClick=\r\n    {this.onClick}>.</button>\r\n  \r\n  <button style={{backgroundColor:'#2a6715'}} id=\"equals\" data-value=\"=\" onClick={this.onClick}>=</button>     \r\n          \r\n  </div>\r\n  );\r\n  }\r\n  }\r\n  \r\n  class App extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        up:'',\r\n        down: '0'\r\n      }\r\n      this.handleClick = this.handleClick.bind(this);\r\n      this.maxLength = \r\n        this.maxLength.bind(this);\r\n    }\r\n    maxLength () {\r\n    let  timer = setTimeout (() => this.setState({down:'limit reached'}),100);\r\n   return () => clearTimeout(timer);   \r\n  }\r\n    handleClick (btnClick) {\r\n     switch (btnClick) {\r\n      case 'C': \r\n         this.setState({\r\n           up:'',\r\n           down:'0'\r\n         });\r\n         break; \r\n         case 'CE':\r\n         this.setState({\r\n          up: '',\r\n          down: this.state.down === '0'?  this.state.down:\r\n     this.state.down.slice(0,-1) || '0' \r\n            });\r\n         break;\r\n          case '=':\r\n         try {\r\n           this.setState({\r\n           up: this.state.down + '=',\r\n        down: eval(this.state.down)  + ''    \r\n           });\r\n         }catch (e) {\r\n            this.setState({\r\n           up: this.state.down + '=',\r\n           down: 'Error'\r\n          });\r\n         }\r\n       break;\r\n       case '.':\r\n         if(this.state.down.slice(-1) !== '.') {\r\n           this.setState({\r\n           down:  this.state.down + btnClick\r\n           })\r\n         }\r\n         break;\r\n          case '*':\r\n          case '/':\r\n          case '+':\r\n          case '-':\r\n         if(this.state.down.slice(-1).search(/([\\/\\*\\-\\+])/g) !== -1) {\r\n           this.setState({\r\n           down:  this.state.down.slice(0,-1) + btnClick\r\n           })\r\n         } else {\r\n           this.setState({\r\n           down:  this.state.down + btnClick\r\n           })\r\n         }\r\n         break;\r\n         default:\r\n         if (this.state.down.length > 15) {\r\n           this.maxLength()\r\n         } else {\r\n         this.setState({\r\n          down: this.state.down === '0'?          btnClick : this.state.down + btnClick \r\n         });\r\n         }\r\n         break;\r\n     }\r\n    }\r\n    \r\n    \r\n    render () {\r\n    return (\r\n      <div id=\"container\">\r\n       <Results up={this.state.up}\r\n                down={this.state.down}\r\n         max={this.maxLength}/>\r\n        <Keypads onClick={this.handleClick}/>\r\n        \r\n        \r\n        \r\n        </div>\r\n  );\r\n  }\r\n  }\r\n \r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/calculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}